@model GestionStock.Models.Models.ProduitsModel;

@{
    ViewData["Title"] = "Liste des Produits";
    ViewData["fonction"] = Model.utilisateur.fonction;
    ViewData["UserId"] = Model.utilisateur.id;
    String fullName = Model.utilisateur.nom.ToString() + " " + Model.utilisateur.prenom.ToString();
    ViewData["nom"] = fullName;

}

<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card card-primary">
                    <div class="card-header">
                        <div class="col-md-6 float-left">
                            <h3 class="card-title">List des Produits</h3>
                        </div>
                        <div class="col-md-6 float-right">
                            <div class="input-group input-group-sm">
                                <input type="text" name="table_search" id="searchBar" class="form-control float-right" style="margin-right:5px" placeholder="Recherche par ID" onkeyup="Search()" />
                                <input type="text" name="table_search" id="searchBar2" class="form-control float-right" placeholder="Recherche par nom" onkeyup="Search2()" />
                            </div>
                        </div>

                    </div>
                    <div class="card-body table-responsive p-0">

                        <div style="padding:5px" class="float-right">
                            <a class="btn btn-info bg-cyan toastsDefaultMaroon float-lg-left" style="margin-right:5px;" asp-controller="Produit" asp-action="Create">
                                <i class="fa fa-plus">
                                </i>
                                &nbsp;Nouveau produit
                            </a>

                            <a class="btn btn-info bg-indigo toastsDefaultMaroon float-lg-right" asp-controller="Produit" asp-action="CreateGroup">
                                <i class="fa fa-plus">
                                </i>
                                &nbsp;Nouveau group
                            </a>

                        </div>
                        <div class="dataTables_wrapper dt-bootstrap4">
                            <table class="table table-striped table-bordered" style="text-align:center;font-size:11px" id="table">
                                <thead>
                                    <tr>
                                        <th>
                                            Id Produit
                                        </th>
                                        <th>
                                            Nom
                                        </th>
                                        <th>
                                            Catégorie
                                        </th>
                                        <th>
                                            Prix d'achat
                                        </th>
                                        <th>
                                            Prix vente
                                        </th>
                                        <th>
                                            Type
                                        </th>

                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.produits)
                                    {
                                        <tr>
                                            <td>

                                                @Html.DisplayFor(modelItem => item.idDeProduit)

                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.nom)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.categorie)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.prixAchat) DH
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.prixVente) DH
                                            </td>
                                            <td>
                                                @if (item.groupProduit == "Null")
                                                {

                                                    <text>Produit en unité </text>
                                                }
                                                else
                                                {
                                                    <text> Produit mesurable </text>


                                                }
                                            </td>
                                            <td>
                                                <div>
                                                    <a class="btn btn-success toastsDefaultSuccess" asp-controller="Produit" asp-action="Details" asp-route-id=@item.id>
                                                        <i class="fa fa-info-circle ">
                                                        </i>
                                                    </a>
                                                    <a class="btn btn-info toastsDefaultInfo" asp-controller="Produit" asp-action="Edit" asp-route-id=@item.id>
                                                        <i class="fas fa-pencil-alt">
                                                        </i>

                                                    </a>
                                                    <button class="btn btn-danger swalDefaultError" onclick="Delete(@item.id)">
                                                        <i class="fas fa-trash">
                                                        </i>

                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>




@section Scripts
{

    <script type="text/javascript">



        function Search() {
            // Declare variables
            var input, filter, table, tr, td, i, txtValue;
            input = document.getElementById("searchBar");
            filter = input.value.toUpperCase();
            table = document.getElementById("table");
            tr = table.getElementsByTagName("tr");

            // Loop through all table rows, and hide those who don't match the search query
            for (i = 0; i < tr.length; i++) {
                td = tr[i].getElementsByTagName("td")[0];
                if (td) {
                    txtValue = td.textContent || td.innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }
        }

        function Delete(id) {

            var result = confirm("Êtes-vous sûr de vouloir supprimer ce produit?");
            if (result == true) {
                $.ajax({
                    type: "POST",
                    url: "/Produit/SupprimerProduit",
                    data: { 'idProduit': id },
                    cache: false,


                    success: function (result) {
                        location.reload();


                    },
                    error: function (xhr) {
                        location.reload();


                    },
                    failure: function (response) {
                        alert("something unexpected happend");
                    },
                });
            } else
                return;
        }






    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#table').DataTable();
        });
        $('#table').dataTable({
            "searching": false,
            "paging": false,
            "bInfo": false,
            "aoColumnDefs": [
                { 'bSortable': false, 'aTargets': [6] }
            ]


        });



        function Search2() {
            // Declare variables
            var input, filter, table, tr, td, i, txtValue;
            input = document.getElementById("searchBar2");
            filter = input.value.toUpperCase();
            table = document.getElementById("table");
            tr = table.getElementsByTagName("tr");

            // Loop through all table rows, and hide those who don't match the search query
            for (i = 0; i < tr.length; i++) {
                td = tr[i].getElementsByTagName("td")[1];
                if (td) {
                    txtValue = td.textContent || td.innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }
        }


    </script>
}
