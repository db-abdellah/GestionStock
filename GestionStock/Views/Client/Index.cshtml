

@model GestionStock.Models.Models.ClientsModel;

@{
    ViewData["Title"] = "List des clients";
    ViewData["UserId"] = Model.utilisateur.id;
    ViewData["fonction"] = Model.utilisateur.fonction;
    String fullName = Model.utilisateur.nom.ToString() + " " + Model.utilisateur.prenom.ToString();
    ViewData["nom"] = fullName;

}
@if (Model.clients.Count == 0)
{
    <div class="container-fluid">
        <div class="card card-default color-palette-box">
            <div class="card-body">
                <div class="text-center">
                    <br />
                    <br />
                    <h2>Aucun client n'est trouvé </h2>
                    <a class="btn btn-default bg-maroon toastsDefaultMaroon " asp-controller="Client" asp-action="Create">
                        <i class="fa fa-plus">
                        </i>&nbsp;Nouveau client
                    </a>
                    <br />
                    <br />
                </div>
            </div>
        </div>
    </div>

}
else
{
    <div class="card card-primary">
        <div class="card-header">
            <div class="col-md-6 float-left">
                <h3 class="card-title">List des clients</h3>
            </div>
            <div class="col-md-6 float-right">
                <div class="input-group input-group-sm">
                    <input type="text" name="table_search" id="searchBar" class="form-control float-right" placeholder="search" onkeyup="Search()" />
                </div>
            </div>

        </div>
        <div class="card-body table-responsive p-0">
            <div style="padding:5px" class="float-right">
                <a class="btn btn-default bg-maroon toastsDefaultMaroon float-lg-right" asp-controller="Fournisseur" asp-action="Create">
                    <i class="fa fa-plus">
                    </i>&nbsp;Nouveau client
                </a>
            </div>
            <table class="table table-striped table-bordered" style="text-align:center" id="table">
                <thead>
                    <tr>

                        <th>
                            Nom Complet
                        </th>
                        <th>
                            Téléphone
                        </th>

                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.clients)
                    {
                        <tr>

                            <td>
                                @Html.DisplayFor(modelItem => item.Nom) @Html.DisplayFor(modelItem => item.prenom)
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.telephone)
                            </td>
                            <td>
                                <div >
                                    <a class="btn btn-success toastsDefaultSuccess" asp-controller="Client" asp-action="Details" asp-route-id=@item.id>
                                        <i class="fa fa-info-circle ">
                                        </i>
                                    </a>
                                    <a class="btn btn-info toastsDefaultInfo" asp-controller="Client" asp-action="Edit" asp-route-id=@item.id>
                                        <i class="fas fa-pencil-alt">
                                        </i>
                                        
                                    </a>
                                    <button class="btn btn-danger swalDefaultError" onclick="Delete(@item.id)">
                                        <i class="fas fa-trash">
                                        </i>
                                        
                                    </button>
                                </div>

                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

}

    @section Scripts
{
        <script type="text/javascript">



            function Search() {
                // Declare variables
                var input, filter, table, tr, td, i, txtValue;
                input = document.getElementById("searchBar");
                filter = input.value.toUpperCase();
                table = document.getElementById("table");
                tr = table.getElementsByTagName("tr");

                // Loop through all table rows, and hide those who don't match the search query
                for (i = 0; i < tr.length; i++) {
                    td = tr[i].getElementsByTagName("td")[0];
                    if (td) {
                        txtValue = td.textContent || td.innerText;
                        if (txtValue.toUpperCase().indexOf(filter) > -1) {
                            tr[i].style.display = "";
                        } else {
                            tr[i].style.display = "none";
                        }
                    }
                }
            }

            function Delete(id) {

                var result = confirm("Êtes-vous sûr de vouloir supprimer ce client?");
                if (result == true) {
                    $.ajax({
                        type: "POST",
                        url: "/Client/SupprimerClient",
                        data: { 'idClient': id },
                        cache: false,


                        success: function (result) {
                            location.reload();


                        },
                        error: function (xhr) {
                            location.reload();


                        },
                        failure: function (response) {
                            alert("something unexpected happend");
                        },
                    });
                } else
                    retuen;
            }

        </script>
        <script type="text/javascript">
            $(document).ready(function () {
                $('#table').DataTable();
            });
            $('#table').dataTable({
                "searching": false,
                "paging": false,
                "bInfo": false,
                "aoColumnDefs": [
                    { 'bSortable': false, 'aTargets': [2] }
                ]


            });


        </script>
    }

